def is_palindromic(seq):
    return seq == get_compl(seq[::-1])
def longest_palindrome(dna, start, end, longest_seq=''):
    if start >= end:
        return longest_seq
    for length in range(2, end - start + 1):
        subseq = dna[start:start + length]
        if is_palindromic(subseq):
            if len(subseq) > len(longest_seq):
                longest_seq = subseq
    return longest_palindrome(dna, start + 1, end, longest_seq)
return seq == seq[::-1] #distractor
if start < end: #distractor
return '' #distractor
subseq = dna[start:length] #distractor
return subseq #distractor
return longest_palindrome(dna, start + 1, end - 1, longest_seq) #distractor