def mergesort(numbers):
    mid = len(numbers) // 2
    if len(numbers) < 2:
        return numbers
    left = list(numbers[:mid])
    right = list(numbers[mid:])
    left = mergesort(left)
    right = mergesort(right)
    return merge(left, right)
def merge(left, right):
    merged = []
    i, j = 0, 0
    while i < len(left) and j < len(right):
        if left[i] <= right[j]:
            merged.append(left[i])
            i += 1
        else:
            merged.append(right[j])
            j += 1
    merged.extend(left[i:])
    merged.extend(right[j:])
    return merged
mid = len(numbers) / 2 #distractor
if len(numbers) == 0: #distractor
return None #distractor
mergesort(left) #distractor
mergesort(right) #distractor
merge(left, right) #distractor
merged.append(left.pop(0)) #distractor
merged.append(right.pop(0)) #distractor