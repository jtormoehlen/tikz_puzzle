"def longest_palindrome(dna, start, end, longest_seq=''): # 8\n" +
"    if start >= end:                                  # 7\n" +
"        return longest_seq                                # 12\n" +
"    for length in range(2, end - start + 1):          # 11\n" +
"        subseq = dna[start:start + length]                # 13\n" +
"        compl = get_compl(subseq)                         # 5\n" +
"        if is_palindromic(subseq) or subseq == compl:     # 4\n" +
"            if len(subseq) > len(longest_seq):                # 6\n" +
"                longest_seq = subseq                              # 1\n" +
"    return longest_palindrome(dna, start + 1, end, longest_seq) # 3\n" +
"else: return None #distractor                     # 2\n" +
"if start == end: #distractor                      # 10\n" +
"subseq = dna[start:length] #distractor             # 9\n" +
